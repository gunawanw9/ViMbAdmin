<?php

namespace Proxies\__CG__\Entities;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Domain extends \Entities\Domain implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Entities\\Domain' . "\0" . 'domain', '' . "\0" . 'Entities\\Domain' . "\0" . 'description', '' . "\0" . 'Entities\\Domain' . "\0" . 'quota', '' . "\0" . 'Entities\\Domain' . "\0" . 'transport', '' . "\0" . 'Entities\\Domain' . "\0" . 'backupmx', '' . "\0" . 'Entities\\Domain' . "\0" . 'active', '' . "\0" . 'Entities\\Domain' . "\0" . 'homedir', '' . "\0" . 'Entities\\Domain' . "\0" . 'maildir', '' . "\0" . 'Entities\\Domain' . "\0" . 'uid', '' . "\0" . 'Entities\\Domain' . "\0" . 'gid', '' . "\0" . 'Entities\\Domain' . "\0" . 'created', '' . "\0" . 'Entities\\Domain' . "\0" . 'modified', '' . "\0" . 'Entities\\Domain' . "\0" . 'id', '' . "\0" . 'Entities\\Domain' . "\0" . 'max_quota', '' . "\0" . 'Entities\\Domain' . "\0" . 'max_aliases', '' . "\0" . 'Entities\\Domain' . "\0" . 'max_sender_canonical', '' . "\0" . 'Entities\\Domain' . "\0" . 'max_mailboxes', '' . "\0" . 'Entities\\Domain' . "\0" . 'alias_count', '' . "\0" . 'Entities\\Domain' . "\0" . 'canonical_count', '' . "\0" . 'Entities\\Domain' . "\0" . 'mailbox_count', '' . "\0" . 'Entities\\Domain' . "\0" . 'Mailboxes', '' . "\0" . 'Entities\\Domain' . "\0" . 'Aliases', '' . "\0" . 'Entities\\Domain' . "\0" . 'Canonical', '' . "\0" . 'Entities\\Domain' . "\0" . 'Logs', '' . "\0" . 'Entities\\Domain' . "\0" . 'Admins', '' . "\0" . 'Entities\\Domain' . "\0" . 'Preferences', '' . "\0" . 'Entities\\Domain' . "\0" . 'Archives', '_className', '_preferenceClassName', '' . "\0" . 'Entities\\Domain' . "\0" . '_cache', '' . "\0" . 'Entities\\Domain' . "\0" . '_namespace'];
        }

        return ['__isInitialized__', '' . "\0" . 'Entities\\Domain' . "\0" . 'domain', '' . "\0" . 'Entities\\Domain' . "\0" . 'description', '' . "\0" . 'Entities\\Domain' . "\0" . 'quota', '' . "\0" . 'Entities\\Domain' . "\0" . 'transport', '' . "\0" . 'Entities\\Domain' . "\0" . 'backupmx', '' . "\0" . 'Entities\\Domain' . "\0" . 'active', '' . "\0" . 'Entities\\Domain' . "\0" . 'homedir', '' . "\0" . 'Entities\\Domain' . "\0" . 'maildir', '' . "\0" . 'Entities\\Domain' . "\0" . 'uid', '' . "\0" . 'Entities\\Domain' . "\0" . 'gid', '' . "\0" . 'Entities\\Domain' . "\0" . 'created', '' . "\0" . 'Entities\\Domain' . "\0" . 'modified', '' . "\0" . 'Entities\\Domain' . "\0" . 'id', '' . "\0" . 'Entities\\Domain' . "\0" . 'max_quota', '' . "\0" . 'Entities\\Domain' . "\0" . 'max_aliases', '' . "\0" . 'Entities\\Domain' . "\0" . 'max_sender_canonical', '' . "\0" . 'Entities\\Domain' . "\0" . 'max_mailboxes', '' . "\0" . 'Entities\\Domain' . "\0" . 'alias_count', '' . "\0" . 'Entities\\Domain' . "\0" . 'canonical_count', '' . "\0" . 'Entities\\Domain' . "\0" . 'mailbox_count', '' . "\0" . 'Entities\\Domain' . "\0" . 'Mailboxes', '' . "\0" . 'Entities\\Domain' . "\0" . 'Aliases', '' . "\0" . 'Entities\\Domain' . "\0" . 'Canonical', '' . "\0" . 'Entities\\Domain' . "\0" . 'Logs', '' . "\0" . 'Entities\\Domain' . "\0" . 'Admins', '' . "\0" . 'Entities\\Domain' . "\0" . 'Preferences', '' . "\0" . 'Entities\\Domain' . "\0" . 'Archives', '_className', '_preferenceClassName', '' . "\0" . 'Entities\\Domain' . "\0" . '_cache', '' . "\0" . 'Entities\\Domain' . "\0" . '_namespace'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Domain $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setDomain($domain)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDomain', [$domain]);

        return parent::setDomain($domain);
    }

    /**
     * {@inheritDoc}
     */
    public function getDomain()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDomain', []);

        return parent::getDomain();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function getAliases()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAliases', []);

        return parent::getAliases();
    }

    /**
     * {@inheritDoc}
     */
    public function getCanonical()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCanonical', []);

        return parent::getCanonical();
    }

    /**
     * {@inheritDoc}
     */
    public function getMailboxes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMailboxes', []);

        return parent::getMailboxes();
    }

    /**
     * {@inheritDoc}
     */
    public function setQuota($quota)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQuota', [$quota]);

        return parent::setQuota($quota);
    }

    /**
     * {@inheritDoc}
     */
    public function getQuota()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQuota', []);

        return parent::getQuota();
    }

    /**
     * {@inheritDoc}
     */
    public function setTransport($transport)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTransport', [$transport]);

        return parent::setTransport($transport);
    }

    /**
     * {@inheritDoc}
     */
    public function getTransport()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTransport', []);

        return parent::getTransport();
    }

    /**
     * {@inheritDoc}
     */
    public function setBackupmx($backupmx)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBackupmx', [$backupmx]);

        return parent::setBackupmx($backupmx);
    }

    /**
     * {@inheritDoc}
     */
    public function getBackupmx()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBackupmx', []);

        return parent::getBackupmx();
    }

    /**
     * {@inheritDoc}
     */
    public function setActive($active)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActive', [$active]);

        return parent::setActive($active);
    }

    /**
     * {@inheritDoc}
     */
    public function getActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActive', []);

        return parent::getActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setHomedir($homedir)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHomedir', [$homedir]);

        return parent::setHomedir($homedir);
    }

    /**
     * {@inheritDoc}
     */
    public function getHomedir()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHomedir', []);

        return parent::getHomedir();
    }

    /**
     * {@inheritDoc}
     */
    public function setMaildir($maildir)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMaildir', [$maildir]);

        return parent::setMaildir($maildir);
    }

    /**
     * {@inheritDoc}
     */
    public function getMaildir()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMaildir', []);

        return parent::getMaildir();
    }

    /**
     * {@inheritDoc}
     */
    public function setUid($uid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUid', [$uid]);

        return parent::setUid($uid);
    }

    /**
     * {@inheritDoc}
     */
    public function getUid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUid', []);

        return parent::getUid();
    }

    /**
     * {@inheritDoc}
     */
    public function setGid($gid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGid', [$gid]);

        return parent::setGid($gid);
    }

    /**
     * {@inheritDoc}
     */
    public function getGid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGid', []);

        return parent::getGid();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreated($created)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreated', [$created]);

        return parent::setCreated($created);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreated', []);

        return parent::getCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function setModified($modified)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModified', [$modified]);

        return parent::setModified($modified);
    }

    /**
     * {@inheritDoc}
     */
    public function getModified()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModified', []);

        return parent::getModified();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function addMailbox(\Entities\Mailbox $mailboxes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMailbox', [$mailboxes]);

        return parent::addMailbox($mailboxes);
    }

    /**
     * {@inheritDoc}
     */
    public function removeMailbox(\Entities\Mailbox $mailboxes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeMailbox', [$mailboxes]);

        return parent::removeMailbox($mailboxes);
    }

    /**
     * {@inheritDoc}
     */
    public function addAlias(\Entities\Alias $aliases)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAlias', [$aliases]);

        return parent::addAlias($aliases);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAlias(\Entities\Alias $aliases)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAlias', [$aliases]);

        return parent::removeAlias($aliases);
    }

    /**
     * {@inheritDoc}
     */
    public function addCanonical(\Entities\Canonical $canonical)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCanonical', [$canonical]);

        return parent::addCanonical($canonical);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCanonical(\Entities\Canonical $canonical)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCanonical', [$canonical]);

        return parent::removeCanonical($canonical);
    }

    /**
     * {@inheritDoc}
     */
    public function addLog(\Entities\Log $logs)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addLog', [$logs]);

        return parent::addLog($logs);
    }

    /**
     * {@inheritDoc}
     */
    public function removeLog(\Entities\Log $logs)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeLog', [$logs]);

        return parent::removeLog($logs);
    }

    /**
     * {@inheritDoc}
     */
    public function getLogs()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLogs', []);

        return parent::getLogs();
    }

    /**
     * {@inheritDoc}
     */
    public function addAdmin(\Entities\Admin $admins)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAdmin', [$admins]);

        return parent::addAdmin($admins);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAdmin(\Entities\Admin $admins)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAdmin', [$admins]);

        return parent::removeAdmin($admins);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdmins()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdmins', []);

        return parent::getAdmins();
    }

    /**
     * {@inheritDoc}
     */
    public function setMaxAliases($maxAliases)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMaxAliases', [$maxAliases]);

        return parent::setMaxAliases($maxAliases);
    }

    /**
     * {@inheritDoc}
     */
    public function setMaxCanonical($maxSenderCanonical)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMaxCanonical', [$maxSenderCanonical]);

        return parent::setMaxCanonical($maxSenderCanonical);
    }

    /**
     * {@inheritDoc}
     */
    public function setMaxSenderCanonical($maxSenderCanonical)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMaxSenderCanonical', [$maxSenderCanonical]);

        return parent::setMaxSenderCanonical($maxSenderCanonical);
    }

    /**
     * {@inheritDoc}
     */
    public function getMaxAliases()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMaxAliases', []);

        return parent::getMaxAliases();
    }

    /**
     * {@inheritDoc}
     */
    public function getMaxCanonical()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMaxCanonical', []);

        return parent::getMaxCanonical();
    }

    /**
     * {@inheritDoc}
     */
    public function setMaxMailboxes($maxMailboxes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMaxMailboxes', [$maxMailboxes]);

        return parent::setMaxMailboxes($maxMailboxes);
    }

    /**
     * {@inheritDoc}
     */
    public function getMaxMailboxes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMaxMailboxes', []);

        return parent::getMaxMailboxes();
    }

    /**
     * {@inheritDoc}
     */
    public function setMaxQuota($maxQuota)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMaxQuota', [$maxQuota]);

        return parent::setMaxQuota($maxQuota);
    }

    /**
     * {@inheritDoc}
     */
    public function getMaxQuota()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMaxQuota', []);

        return parent::getMaxQuota();
    }

    /**
     * {@inheritDoc}
     */
    public function setAliasCount($aliasCount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAliasCount', [$aliasCount]);

        return parent::setAliasCount($aliasCount);
    }

    /**
     * {@inheritDoc}
     */
    public function getAliasCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAliasCount', []);

        return parent::getAliasCount();
    }

    /**
     * {@inheritDoc}
     */
    public function increaseAliasCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'increaseAliasCount', []);

        return parent::increaseAliasCount();
    }

    /**
     * {@inheritDoc}
     */
    public function decreaseAliasCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'decreaseAliasCount', []);

        return parent::decreaseAliasCount();
    }

    /**
     * {@inheritDoc}
     */
    public function setCanonicalCount($canonicalCount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCanonicalCount', [$canonicalCount]);

        return parent::setCanonicalCount($canonicalCount);
    }

    /**
     * {@inheritDoc}
     */
    public function getCanonicalCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCanonicalCount', []);

        return parent::getCanonicalCount();
    }

    /**
     * {@inheritDoc}
     */
    public function increaseCanonicalCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'increaseCanonicalCount', []);

        return parent::increaseCanonicalCount();
    }

    /**
     * {@inheritDoc}
     */
    public function decreaseCanonicalCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'decreaseCanonicalCount', []);

        return parent::decreaseCanonicalCount();
    }

    /**
     * {@inheritDoc}
     */
    public function setMailboxCount($mailboxCount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMailboxCount', [$mailboxCount]);

        return parent::setMailboxCount($mailboxCount);
    }

    /**
     * {@inheritDoc}
     */
    public function getMailboxCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMailboxCount', []);

        return parent::getMailboxCount();
    }

    /**
     * {@inheritDoc}
     */
    public function increaseMailboxCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'increaseMailboxCount', []);

        return parent::increaseMailboxCount();
    }

    /**
     * {@inheritDoc}
     */
    public function decreaseMailboxCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'decreaseMailboxCount', []);

        return parent::decreaseMailboxCount();
    }

    /**
     * {@inheritDoc}
     */
    public function addMailboxe(\Entities\Mailbox $mailboxes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMailboxe', [$mailboxes]);

        return parent::addMailboxe($mailboxes);
    }

    /**
     * {@inheritDoc}
     */
    public function removeMailboxe(\Entities\Mailbox $mailboxes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeMailboxe', [$mailboxes]);

        return parent::removeMailboxe($mailboxes);
    }

    /**
     * {@inheritDoc}
     */
    public function addAliase(\Entities\Alias $aliases)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAliase', [$aliases]);

        return parent::addAliase($aliases);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAliase(\Entities\Alias $aliases)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAliase', [$aliases]);

        return parent::removeAliase($aliases);
    }

    /**
     * {@inheritDoc}
     */
    public function addPreference(\Entities\DomainPreference $preferences)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPreference', [$preferences]);

        return parent::addPreference($preferences);
    }

    /**
     * {@inheritDoc}
     */
    public function removePreference(\Entities\DomainPreference $preferences)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePreference', [$preferences]);

        return parent::removePreference($preferences);
    }

    /**
     * {@inheritDoc}
     */
    public function getPreferences()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPreferences', []);

        return parent::getPreferences();
    }

    /**
     * {@inheritDoc}
     */
    public function addArchive(\Entities\Archive $archives)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addArchive', [$archives]);

        return parent::addArchive($archives);
    }

    /**
     * {@inheritDoc}
     */
    public function removeArchive(\Entities\Archive $archives)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeArchive', [$archives]);

        return parent::removeArchive($archives);
    }

    /**
     * {@inheritDoc}
     */
    public function getArchives()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArchives', []);

        return parent::getArchives();
    }

    /**
     * {@inheritDoc}
     */
    public function loadPreference($attribute, $index = 0, $includeExpired = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'loadPreference', [$attribute, $index, $includeExpired]);

        return parent::loadPreference($attribute, $index, $includeExpired);
    }

    /**
     * {@inheritDoc}
     */
    public function hasPreference($attribute, $index = 0, $includeExpired = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasPreference', [$attribute, $index, $includeExpired]);

        return parent::hasPreference($attribute, $index, $includeExpired);
    }

    /**
     * {@inheritDoc}
     */
    public function getPreference($attribute, $index = 0, $includeExpired = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPreference', [$attribute, $index, $includeExpired]);

        return parent::getPreference($attribute, $index, $includeExpired);
    }

    /**
     * {@inheritDoc}
     */
    public function setPreference($attribute, $value, $operator = '=', $expires = 0, $index = 0)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPreference', [$attribute, $value, $operator, $expires, $index]);

        return parent::setPreference($attribute, $value, $operator, $expires, $index);
    }

    /**
     * {@inheritDoc}
     */
    public function addIndexedPreference($attribute, $value, $operator = '=', $expires = 0, $max = 0)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addIndexedPreference', [$attribute, $value, $operator, $expires, $max]);

        return parent::addIndexedPreference($attribute, $value, $operator, $expires, $max);
    }

    /**
     * {@inheritDoc}
     */
    public function cleanExpiredPreferences($asOf = NULL, $attribute = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'cleanExpiredPreferences', [$asOf, $attribute]);

        return parent::cleanExpiredPreferences($asOf, $attribute);
    }

    /**
     * {@inheritDoc}
     */
    public function deletePreference($attribute, $index = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'deletePreference', [$attribute, $index]);

        return parent::deletePreference($attribute, $index);
    }

    /**
     * {@inheritDoc}
     */
    public function expungePreferences()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'expungePreferences', []);

        return parent::expungePreferences();
    }

    /**
     * {@inheritDoc}
     */
    public function getIndexedPreference($attribute, $withIndex = false, $ignoreExpired = true)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIndexedPreference', [$attribute, $withIndex, $ignoreExpired]);

        return parent::getIndexedPreference($attribute, $withIndex, $ignoreExpired);
    }

    /**
     * {@inheritDoc}
     */
    public function getAssocPreference($attribute, $index = NULL, $ignoreExpired = true)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAssocPreference', [$attribute, $index, $ignoreExpired]);

        return parent::getAssocPreference($attribute, $index, $ignoreExpired);
    }

    /**
     * {@inheritDoc}
     */
    public function deleteAssocPreference($attribute, $index = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'deleteAssocPreference', [$attribute, $index]);

        return parent::deleteAssocPreference($attribute, $index);
    }

    /**
     * {@inheritDoc}
     */
    public function _getPreferences()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '_getPreferences', []);

        return parent::_getPreferences();
    }

}
